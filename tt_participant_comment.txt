Хотів би додатково зазначити, що під час виконання завдання я спеціально не змінював існуючий код,
який не стосувався моєї частини роботи. Часто виникало бажання переписати деякі речі,
але я вважав за правильне впроваджувати свій функціонал у вже наявну кодову базу,
не порушуючи існуючий стиль. Такий підхід, на мою думку, є важливим для ефективної командної роботи.

У процесі виникали різні питання, зокрема — як краще реалізувати безпеку застосунку.
Я мав вибір між кастомною реалізацією авторизації та стандартним рішенням від Spring.
Для цього завдання я обрав стандартну реалізацію, оскільки технічне завдання не вимагало додаткової кастомізації.

Також були нюанси з відображенням картинок. Оскільки я більше працював із JavaScript,
у мене були ідеї реалізувати кастомне відображення альбому. Проте я свідомо відмовився від цього,
щоб зосередитись на основних вимогах завдання.

У ході вирішення поставлених задач, я знайшов для себе нові тонкощі того, як працює Spring.
Коли реалізовував множинне додавання зображень, то виявилось, що якщо користувач не додасть нічого, і фронт це пропустить,
то без додаткової перевірки, spring-validation це пропустить. Це відбувається через те, що spring автоматично додає
фейковий об'єкт в список зображень, і тому складно помітити, коли користувач не передав жодного зображення.
Я вважаю це цікавим, бо мені не вдалось знайти інформацію про це в інтернеті.

Крім того, я не використовував @Lombok чи інші звичні мені інструменти, щоб дотримуватись стилю,
який був заданий у проекті.

Дякую!